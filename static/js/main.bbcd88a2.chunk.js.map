{"version":3,"sources":["slices/views.js","components/MetaInputs/Text/Display.jsx","components/MetaInputs/Text/filterMethods.jsx","components/MetaInputs/Text/index.jsx","components/MetaInputs/utils/createOption.js","components/MetaInputs/utils/OptionManagerModal.jsx","components/MetaInputs/utils/SelectWithOptionManager.jsx","components/MetaInputs/Select/Display.jsx","components/MetaInputs/utils/PropertyOptionsSelect.jsx","components/MetaInputs/Select/filterMethods.jsx","components/MetaInputs/Select/index.jsx","components/MetaInputs/MultiSelect/Display.jsx","components/MetaInputs/MultiSelect/filterMethods.jsx","components/MetaInputs/MultiSelect/index.jsx","components/MetaInputs/index.js","slices/pages.js","slices/properties.js","slices/databases.js","reducers/index.js","utils/demoState.js","store.js","utils/devices.js","components/Sidebar.jsx","components/InlineInput.jsx","components/Database/Views/utils/Card.jsx","components/Database/Views/utils/SortableList.jsx","components/Database/Views/utils/filterPages.js","components/Database/Views/utils/applySequence.js","components/Database/Views/List.jsx","components/Database/Views/utils/SortableBoard.jsx","components/Database/Views/Board.jsx","components/Database/Views/index.js","components/Database/Views/utils/groupPages.js","components/Database/ViewManagerModal.jsx","components/Database/ViewSelect.jsx","components/Database/PropertyForm.jsx","components/Database/PropertiesDropdown.jsx","components/Database/FilterInput.jsx","components/Database/FiltersDropdown.jsx","components/Database/GroupByDropdown.jsx","components/Page/PageMeta.jsx","components/Page/PageHeader.jsx","components/MardownEditor.jsx","components/Page/Page.jsx","components/Database/Database.jsx","App.jsx","serviceWorker.js","utils/config.js","index.jsx"],"names":["slice","createSlice","name","initialState","reducers","create","state","payload","id","type","filters","showProperties","sorts","sequence","groupBy","toggleShowProperty","viewId","propertyId","index","indexOf","splice","push","addFilter","filter","updateFilter","filterId","newFilter","findIndex","deleteFilter","updateSequence","newSequence","rename","newName","remove","updateGroupBy","actions","createView","dispatch","view","shortid","generate","Display","value","propTypes","PropTypes","string","isRequired","contains","args","search","ArgsInput","onChange","size","event","target","arrayOf","func","TextInput","styled","Input","Text","placeholder","defaultValue","filterMethods","colorMap","OptionForm","form","OptionItem","div","DeleteBtn","DeleteOutlined","Modal","AntModal","OptionManagerModal","visible","onCancel","options","optionInput","useRef","addOption","optionName","current","trim","hasDuplicated","find","option","newOption","color","Math","floor","random","length","title","footer","onSubmit","preventDefault","ref","htmlType","icon","PlusOutlined","map","key","onClick","optionId","newOptions","removeOption","Option","AntSelect","SelectInput","Select","mode","additional","onAdditionalChange","useState","optionManagerVisible","setOptionManagerVisible","openModal","closeModal","updateOptions","allowClear","filterOption","inputValue","children","disabled","dropdownRender","menu","style","margin","SettingOutlined","defaultProps","undefined","property","selectedOption","PropertyOptionsSelect","minWidth","shape","object","isValueValid","SelectWithOptionManager","defaultAdditional","MultiSelect","validValue","metaInputs","getInput","getDisplay","getFilterMethods","meta","content","updateMeta","pageId","updateContent","updateTitle","getMetaValue","updateAdditional","additionalChange","createProperty","getDefaultAdditional","pages","views","properties","addPage","databaseId","addProperty","addView","popView","popPage","popProperty","createPageInDatabase","page","createPage","createPropertyInDatabase","deletePropertyInDatabase","getState","Object","keys","forEach","removeProperty","combineReducers","databases","JSON","parse","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","preloadedState","demoState","persistor","persistStore","breakpoints","xs","sm","md","lg","xl","xxl","Sider","Layout","SideBarWrapper","DatabaseList","Sidebar","currentDatabaseId","onDatabaseCreate","onDatabaseDelete","isActive","collapsed","setCollapsed","breakpoint","collapsedWidth","onCollapse","className","AppstoreAddOutlined","data-testid","handleItemSelect","window","matchMedia","devices","matches","role","onKeyPress","tabIndex","stopPropagation","setTimeout","handleDeleteBtnClick","connect","defaultView","database","createDatabase","InlineInput","tagName","multiLine","input","useEffect","innerText","React","createElement","contentEditable","onInput","CardWrapper","Card","onDelete","innerRef","rest","propertyList","SortableList","items","onSort","onDragEnd","result","destination","source","startIndex","endIndex","droppableId","provided","droppableProps","item","draggableId","draggableProvided","restProps","draggableProps","dragHandleProps","renderListItem","reduce","included","method","filterProperty","filterMethod","propertyValue","applyFilterRules","sequentialPages","findPage","excludedPages","CreateBtn","Button","BoardWrapper","Board","BoardTitle","BoardContent","AddBtn","SortableBoard","groups","onItemCreate","entries","groupId","group","renderItem","CreatePropertyBtn","BoardCard","ListView","dataSource","onPageCreate","onPageDelete","onPageSelect","onSequenceChange","createEmptyPage","useMemo","applySequence","filterPages","droppedPageId","pageMeta","image","Empty","PRESENTED_IMAGE_SIMPLE","BoardView","onPageMetaChange","onGroupByInit","propertyToGroupBy","pageGroups","ungrouped","groupPages","sourceGroupId","sourceIndex","destinationGroupId","destinationIndex","targetPage","values","seq","message","showIcon","ViewForm","ViewItem","NameInput","ViewManagerModal","onCreate","onRename","viewType","setViewType","ViewsSelect","ViewSelect","currentViewId","modalVisible","setModalVisible","handleViewDelete","otherView","PropertyForm","onFinish","labelCol","span","wrapperCol","resetFields","Item","label","rules","required","width","inputName","offset","PropertyItem","Menu","PropertiesDropdown","onPropertyCreate","onPropertyDelete","onPropertyToggle","dropdownVisible","setDropdownVisible","createPropertyModal","checked","Divider","onVisibleChange","overlay","trigger","InputWrapper","ArgsInputWrapper","FilterInput","selectedProperty","selectedPropertyId","selectedMethod","newArgs","FiltersDropdown","onFilterCreate","onFilterChange","onFilterDelete","filterList","GroupByDropdown","onGroupByChange","CheckOutlined","Meta","PageMeta","onMetaChange","list","MetaInput","newValue","PageHeader","onTitleChange","MarkdownEditor","height","previewStyle","editor","initialValue","initialEditType","getInstance","getMarkdown","usageStatistics","PageWrapper","PageContent","getMeta","onContentChange","DatabaseWrapper","Content","Title","h1","Toolbar","PageModal","removePage","deletePageInDatabase","createFilter","onViewCreate","createViewInDatabase","onViewDelete","removeView","deleteViewInDatabase","onViewRename","renameView","initGroupBy","setCurrentViewId","selectedPageId","setSelectedPageId","currentView","DataView","notification","open","InfoCircleTwoTone","duration","AppLayout","AppContent","EmptyView","process","setCurrentDatabaseId","description","Boolean","location","hostname","match","config","ReactGA","initialize","pageview","pathname","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.bbcd88a2.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\n\nconst initialState = {};\n\nconst slice = createSlice({\n  name: \"views\",\n  initialState,\n  reducers: {\n    create: (\n      state,\n      {\n        payload: {\n          id,\n          name,\n          type = \"ListView\",\n          filters = [],\n          showProperties = [],\n          sorts = [],\n          sequence = [],\n          groupBy = {},\n        },\n      }\n    ) => {\n      state[id] = {\n        id,\n        name,\n        type,\n        filters,\n        showProperties,\n        sorts,\n        sequence,\n        groupBy,\n      };\n    },\n    toggleShowProperty(state, { payload: { viewId, propertyId } }) {\n      const { showProperties } = state[viewId];\n\n      const index = showProperties.indexOf(propertyId);\n      if (index > -1) {\n        showProperties.splice(index, 1);\n      } else {\n        showProperties.push(propertyId);\n      }\n    },\n    addFilter(state, { payload: { viewId, filter } }) {\n      state[viewId].filters.push(filter);\n    },\n    updateFilter(state, { payload: { viewId, filterId, newFilter } }) {\n      const { filters } = state[viewId];\n      const index = filters.findIndex((filter) => filter.id === filterId);\n\n      filters[index] = { ...filters[index], ...newFilter };\n    },\n    deleteFilter(state, { payload: { viewId, filterId } }) {\n      const { filters } = state[viewId];\n      const index = filters.findIndex((filter) => filter.id === filterId);\n      filters.splice(index, 1);\n    },\n    updateSequence(state, { payload: { viewId, newSequence } }) {\n      state[viewId].sequence = newSequence;\n    },\n    rename(state, { payload: { viewId, newName } }) {\n      state[viewId].name = newName;\n    },\n    remove(state, { payload: { viewId } }) {\n      delete state[viewId];\n    },\n    updateGroupBy(state, { payload: { viewId, propertyId } }) {\n      state[viewId].groupBy.propertyId = propertyId;\n    },\n  },\n});\n\nexport const {\n  create,\n  toggleShowProperty,\n  addFilter,\n  updateFilter,\n  deleteFilter,\n  updateSequence,\n  rename,\n  remove,\n  updateGroupBy,\n} = slice.actions;\n\nexport default slice.reducer;\n\nexport const createView = ({ name, id, type }) => (dispatch) => {\n  const view = {\n    name,\n    type,\n    id: id || shortid.generate(),\n  };\n\n  dispatch(create(view));\n};\n\nexport const createFilter = (viewId) => (dispatch) => {\n  const filter = {\n    id: shortid.generate(),\n    propertyId: null,\n    method: null,\n    args: [],\n  };\n\n  dispatch(addFilter({ viewId, filter }));\n};\n","import PropTypes from \"prop-types\";\n\nconst Display = ({ value }) => value;\nDisplay.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nexport default Display;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"antd\";\n\nconst contains = (value, args) => value.search(args[0]) > -1;\ncontains.ArgsInput = ({ args, onChange }) => {\n  const handleChange = (event) => onChange([event.target.value]);\n\n  return <Input size=\"small\" value={args[0]} onChange={handleChange} />;\n};\ncontains.ArgsInput.propTypes = {\n  args: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default {\n  contains,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Input } from \"antd\";\nimport Display from \"./Display\";\nimport filterMethods from \"./filterMethods\";\n\nconst TextInput = styled(Input)`\n  border: none;\n  border-bottom: 1px dashed black;\n  border-radius: 0;\n\n  &:focus,\n  &:hover {\n    border-color: black;\n  }\n`;\n\nfunction Text({ value, onChange }) {\n  const handleChange = (event) => onChange(event.target.value);\n\n  return (\n    <div>\n      <TextInput placeholder=\"Empty\" value={value} onChange={handleChange} />\n    </div>\n  );\n}\n\nText.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nText.defaultValue = \"\";\nText.Display = Display;\nText.filterMethods = filterMethods;\n\nexport default Text;\n","import shortid from \"shortid\";\n\nconst colorMap = [\n  \"magenta\",\n  \"red\",\n  \"volcano\",\n  \"orange\",\n  \"gold\",\n  \"lime\",\n  \"green\",\n  \"cyan\",\n  \"blue\",\n  \"geekblue\",\n  \"purple\",\n];\n\nconst getRandomColor = () => colorMap[Math.floor(Math.random() * colorMap.length)];\n\nexport default (name) => {\n  return {\n    id: shortid.generate(),\n    name,\n    color: getRandomColor(),\n  };\n};\n","import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Button, Modal as AntModal, Input, Tag } from \"antd\";\nimport { PlusOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport createOption from \"./createOption\";\n\nconst OptionForm = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nconst OptionItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 24px;\n\n  &:hover {\n    background: #e7e7e78c;\n  }\n`;\n\nconst DeleteBtn = styled(DeleteOutlined)`\n  cursor: pointer;\n`;\n\nconst Modal = styled(AntModal)`\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n\nfunction OptionManagerModal({ visible, onCancel, options, onChange }) {\n  const optionInput = useRef(null);\n\n  const addOption = () => {\n    const optionName = optionInput.current.state.value\n      ? optionInput.current.state.value.trim()\n      : \"\";\n    const hasDuplicated = !!options.find((option) => option.name === optionName);\n\n    if (optionName === \"\" || hasDuplicated) {\n      return;\n    }\n\n    const newOption = createOption(optionName);\n    onChange([...options, newOption]);\n    optionInput.current.state.value = \"\";\n  };\n\n  const removeOption = (optionId) => {\n    const newOptions = options.filter((option) => option.id !== optionId);\n\n    onChange(newOptions);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addOption();\n  };\n\n  return (\n    <Modal\n      title=\"Manage options\"\n      onCancel={onCancel}\n      visible={visible}\n      footer={\n        <OptionForm onSubmit={handleSubmit}>\n          <Input ref={optionInput} />\n          <Button htmlType=\"submit\" size=\"small\" type=\"link\" icon={<PlusOutlined />}>\n            Add a option\n          </Button>\n        </OptionForm>\n      }\n    >\n      {options.map(({ name, id }) => (\n        <OptionItem key={id}>\n          <Tag>{name}</Tag> <DeleteBtn onClick={() => removeOption(id)} />\n        </OptionItem>\n      ))}\n    </Modal>\n  );\n}\n\nOptionManagerModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default OptionManagerModal;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Select as AntSelect, Divider, Button } from \"antd\";\nimport { SettingOutlined } from \"@ant-design/icons\";\nimport OptionManagerModal from \"./OptionManagerModal\";\n\nconst { Option } = AntSelect;\n\nconst SelectInput = styled(AntSelect)`\n  width: 100%;\n\n  &:not(.ant-select-customize-input) .ant-select-selector {\n    border: none;\n    border-bottom: 1px dashed black;\n    border-radius: 0;\n\n    &:focus,\n    &:hover {\n      border-color: black;\n    }\n  }\n`;\n\nfunction Select({ mode, value, onChange, additional: { options }, onAdditionalChange }) {\n  const [optionManagerVisible, setOptionManagerVisible] = useState(false);\n  const openModal = () => setOptionManagerVisible(true);\n  const closeModal = () => setOptionManagerVisible(false);\n\n  const updateOptions = (newOptions) => {\n    onAdditionalChange({ options: newOptions });\n  };\n\n  const filterOption = (inputValue, option) => option.children.search(inputValue) > -1;\n\n  return (\n    <SelectInput\n      allowClear\n      filterOption={filterOption}\n      mode={mode}\n      placeholder=\"Empty\"\n      disabled={optionManagerVisible}\n      value={value}\n      onChange={onChange}\n      dropdownRender={(menu) => (\n        <div>\n          {menu}\n          <Divider style={{ margin: \"4px 0\" }} />\n\n          <Button onClick={openModal} size=\"small\" type=\"link\" icon={<SettingOutlined />}>\n            Manage options\n          </Button>\n\n          <OptionManagerModal\n            visible={optionManagerVisible}\n            options={options}\n            onCancel={closeModal}\n            onChange={updateOptions}\n          />\n        </div>\n      )}\n    >\n      {options.map(({ name, id }) => (\n        <Option value={id} key={id}>\n          {name}\n        </Option>\n      ))}\n    </SelectInput>\n  );\n}\n\nSelect.defaultProps = {\n  mode: undefined,\n};\n\nSelect.propTypes = {\n  mode: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  additional: PropTypes.shape({\n    options: PropTypes.array,\n  }).isRequired,\n  onAdditionalChange: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Tag } from \"antd\";\n\nconst Display = ({\n  property: {\n    additional: { options },\n  },\n  value,\n}) => {\n  const selectedOption = options.find((option) => value === option.id);\n  if (!selectedOption) {\n    return null;\n  }\n\n  return <Tag color={selectedOption.color}>{selectedOption.name}</Tag>;\n};\nDisplay.propTypes = {\n  value: PropTypes.string.isRequired,\n  property: PropTypes.shape({\n    additional: PropTypes.object,\n  }).isRequired,\n};\n\nexport default Display;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Select } from \"antd\";\n\nconst { Option } = Select;\n\nconst PropertyOptionsSelect = ({\n  property: {\n    additional: { options },\n  },\n  onChange,\n  value,\n}) => {\n  return (\n    <Select size=\"small\" style={{ minWidth: \"100px\" }} value={value} onChange={onChange}>\n      {options.map(({ id, name }) => (\n        <Option key={id} value={id}>\n          {name}\n        </Option>\n      ))}\n    </Select>\n  );\n};\nPropertyOptionsSelect.defaultProps = {\n  value: null,\n};\nPropertyOptionsSelect.propTypes = {\n  property: PropTypes.shape({\n    additional: PropTypes.object,\n  }).isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nexport default PropertyOptionsSelect;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PropertyOptionsSelect from \"../utils/PropertyOptionsSelect\";\n\nconst contains = (value, args) => value === args[0];\ncontains.ArgsInput = ({ property, args, onChange }) => {\n  const handleChange = (value) => onChange([value]);\n\n  return <PropertyOptionsSelect value={args[0]} property={property} onChange={handleChange} />;\n};\ncontains.ArgsInput.propTypes = {\n  args: PropTypes.arrayOf(PropTypes.string).isRequired,\n  property: PropTypes.shape({\n    additional: PropTypes.object,\n  }).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default {\n  contains,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectWithOptionManager from \"../utils/SelectWithOptionManager\";\nimport Display from \"./Display\";\nimport filterMethods from \"./filterMethods\";\n\nfunction Select({ value, onChange, additional, additional: { options }, onAdditionalChange }) {\n  const isValueValid = options.findIndex((option) => option.id === value) > -1;\n\n  return (\n    <SelectWithOptionManager\n      value={isValueValid ? value : Select.defaultValue}\n      additional={additional}\n      onChange={onChange}\n      onAdditionalChange={onAdditionalChange}\n    />\n  );\n}\n\nSelect.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  additional: PropTypes.shape({\n    options: PropTypes.array,\n  }).isRequired,\n  onAdditionalChange: PropTypes.func.isRequired,\n};\n\nSelect.defaultValue = \"\";\nSelect.defaultAdditional = {\n  options: [],\n};\nSelect.Display = Display;\nSelect.filterMethods = filterMethods;\n\nexport default Select;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Tag } from \"antd\";\n\nconst Display = ({\n  property: {\n    additional: { options },\n  },\n  value,\n}) => {\n  const selectedOptions = options.filter((option) => value.indexOf(option.id) > -1);\n\n  return selectedOptions.map((option) => (\n    <Tag key={option.id} color={option.color}>\n      {option.name}\n    </Tag>\n  ));\n};\nDisplay.propTypes = {\n  value: PropTypes.arrayOf(PropTypes.string).isRequired,\n  property: PropTypes.shape({\n    additional: PropTypes.object,\n  }).isRequired,\n};\n\nexport default Display;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PropertyOptionsSelect from \"../utils/PropertyOptionsSelect\";\n\nconst contains = (value, args) => value.indexOf(args[0]) > -1;\ncontains.ArgsInput = ({ property, args, onChange }) => {\n  const handleChange = (value) => onChange([value]);\n\n  return <PropertyOptionsSelect value={args[0]} property={property} onChange={handleChange} />;\n};\ncontains.ArgsInput.propTypes = {\n  args: PropTypes.arrayOf(PropTypes.string).isRequired,\n  property: PropTypes.shape({\n    additional: PropTypes.object,\n  }).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default {\n  contains,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectWithOptionManager from \"../utils/SelectWithOptionManager\";\nimport Display from \"./Display\";\nimport filterMethods from \"./filterMethods\";\n\nfunction MultiSelect({ value, onChange, additional, additional: { options }, onAdditionalChange }) {\n  const isValid = (optionId) => options.findIndex((option) => option.id === optionId) > -1;\n  const validValue = value.filter(isValid);\n\n  return (\n    <SelectWithOptionManager\n      mode=\"multiple\"\n      value={validValue}\n      additional={additional}\n      onChange={onChange}\n      onAdditionalChange={onAdditionalChange}\n    />\n  );\n}\n\nMultiSelect.propTypes = {\n  value: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onChange: PropTypes.func.isRequired,\n  additional: PropTypes.shape({\n    options: PropTypes.array,\n  }).isRequired,\n  onAdditionalChange: PropTypes.func.isRequired,\n};\n\nMultiSelect.defaultValue = [];\nMultiSelect.defaultAdditional = {\n  options: [],\n};\nMultiSelect.Display = Display;\nMultiSelect.filterMethods = filterMethods;\n\nexport default MultiSelect;\n","import Text from \"./Text\";\nimport Select from \"./Select\";\nimport MultiSelect from \"./MultiSelect\";\n\nconst metaInputs = {\n  Text,\n  Select,\n  MultiSelect,\n};\n\nexport const getInputNames = () => Object.keys(metaInputs);\nexport const getInput = (type) => metaInputs[type];\nexport const getDefaultValue = (type) => getInput(type).defaultValue;\nexport const getDefaultAdditional = (type) => getInput(type).defaultAdditional || {};\nexport const getDisplay = (type) => getInput(type).Display;\nexport const getFilterMethods = (type) => getInput(type).filterMethods || {};\n","/* eslint-disable no-param-reassign */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\nimport { getDefaultValue } from \"../components/MetaInputs\";\n\nconst initialState = {};\n\nconst slice = createSlice({\n  name: \"pages\",\n  initialState,\n  reducers: {\n    create: (state, { payload: { id, title, meta = {}, content = \"\" } }) => {\n      state[id] = {\n        id,\n        title,\n        meta,\n        content,\n      };\n    },\n    updateMeta: (state, { payload: { pageId, propertyId, value } }) => {\n      state[pageId].meta[propertyId] = value;\n    },\n    updateContent: (state, { payload: { pageId, content } }) => {\n      state[pageId].content = content;\n    },\n    updateTitle: (state, { payload: { pageId, title } }) => {\n      state[pageId].title = title;\n    },\n    remove(state, { payload: { pageId } }) {\n      delete state[pageId];\n    },\n  },\n});\n\nexport const { create, updateMeta, updateContent, updateTitle, remove } = slice.actions;\n\nexport default slice.reducer;\n\nexport const createPage = ({ title, id, meta }) => (dispatch) => {\n  const page = {\n    title,\n    meta,\n    id: id || shortid.generate(),\n  };\n\n  dispatch(create(page));\n};\n\nexport const getMetaValue = (meta, property) =>\n  meta[property.id] !== undefined ? meta[property.id] : getDefaultValue(property.type);\n","/* eslint-disable no-param-reassign */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\nimport { getDefaultAdditional } from \"../components/MetaInputs\";\nimport { deleteFilter } from \"./views\";\n\nconst initialState = {};\n\nconst slice = createSlice({\n  name: \"properties\",\n  initialState,\n  reducers: {\n    create: (state, { payload: { id, name, type = \"Text\", additional = {} } }) => {\n      state[id] = {\n        id,\n        name,\n        type,\n        additional,\n      };\n    },\n    updateAdditional: (state, { payload: { propertyId, additionalChange } }) => {\n      state[propertyId].additional = {\n        ...state[propertyId].additional,\n        ...additionalChange,\n      };\n    },\n    remove: (state, { payload: { propertyId } }) => {\n      delete state[propertyId];\n    },\n  },\n});\n\nexport const { create, updateAdditional, remove } = slice.actions;\n\nexport default slice.reducer;\n\nexport const createProperty = ({ name, type, id }) => (dispatch) => {\n  const additional = getDefaultAdditional(type);\n\n  const property = {\n    name,\n    type,\n    id: id || shortid.generate(),\n    additional,\n  };\n\n  dispatch(create(property));\n};\n\nexport const removeProperty = (propertyId) => (dispatch, getState) => {\n  const { views } = getState();\n\n  Object.keys(views).forEach((viewId) => {\n    views[viewId].filters.forEach((filter) => {\n      if (filter.propertyId === propertyId) {\n        dispatch(deleteFilter({ viewId, filterId: filter.id }));\n      }\n    });\n  });\n\n  dispatch(remove({ propertyId }));\n};\n","/* eslint-disable no-param-reassign */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\nimport { createView, remove as removeView, updateGroupBy } from \"./views\";\nimport { createPage, remove as removePage } from \"./pages\";\nimport { createProperty, removeProperty } from \"./properties\";\n\nconst initialState = {};\n\nconst slice = createSlice({\n  name: \"databases\",\n  initialState,\n  reducers: {\n    create: (state, { payload: { id, name, pages = [], views = [], properties = [] } }) => {\n      state[id] = {\n        id,\n        name,\n        pages,\n        views,\n        properties,\n      };\n    },\n    addPage: (state, { payload: { databaseId, pageId } }) => {\n      state[databaseId].pages.push(pageId);\n    },\n    addProperty: (state, { payload: { databaseId, propertyId } }) => {\n      state[databaseId].properties.push(propertyId);\n    },\n    remove: (state, { payload: { databaseId } }) => {\n      delete state[databaseId];\n    },\n    rename: (state, { payload: { databaseId, newName } }) => {\n      state[databaseId].name = newName;\n    },\n    addView: (state, { payload: { databaseId, viewId } }) => {\n      state[databaseId].views.push(viewId);\n    },\n    popView: (state, { payload: { databaseId, viewId } }) => {\n      const { views } = state[databaseId];\n      const index = views.indexOf(viewId);\n      views.splice(index, 1);\n    },\n    popPage: (state, { payload: { databaseId, pageId } }) => {\n      const { pages } = state[databaseId];\n      const index = pages.indexOf(pageId);\n      pages.splice(index, 1);\n    },\n    popProperty: (state, { payload: { databaseId, propertyId } }) => {\n      const { properties } = state[databaseId];\n      const index = properties.indexOf(propertyId);\n      properties.splice(index, 1);\n    },\n  },\n});\n\nexport const {\n  create,\n  addPage,\n  addProperty,\n  remove,\n  rename,\n  addView,\n  popView,\n  popPage,\n  popProperty,\n} = slice.actions;\n\nexport default slice.reducer;\n\nexport const createDatabase = ({ name }) => (dispatch) => {\n  const defaultView = {\n    name: \"default\",\n    id: shortid.generate(),\n  };\n  dispatch(createView(defaultView));\n\n  const database = {\n    name,\n    id: shortid.generate(),\n    views: [defaultView.id],\n  };\n  dispatch(create(database));\n};\n\nexport const createPageInDatabase = (databaseId, { title, meta }) => (dispatch) => {\n  const page = {\n    title,\n    meta,\n    id: shortid.generate(),\n  };\n  dispatch(createPage(page));\n\n  dispatch(addPage({ databaseId, pageId: page.id }));\n};\n\nexport const deletePageInDatabase = (databaseId, pageId) => (dispatch) => {\n  dispatch(removePage({ pageId }));\n  dispatch(popPage({ databaseId, pageId }));\n};\n\nexport const createViewInDatabase = (databaseId, { name, type }) => (dispatch) => {\n  const view = {\n    name,\n    type,\n    id: shortid.generate(),\n  };\n  dispatch(createView(view));\n\n  dispatch(addView({ databaseId, viewId: view.id }));\n};\n\nexport const deleteViewInDatabase = (databaseId, viewId) => (dispatch) => {\n  dispatch(removeView({ viewId }));\n  dispatch(popView({ databaseId, viewId }));\n};\n\nexport const createPropertyInDatabase = (databaseId, { name, type, id }) => (dispatch) => {\n  const property = {\n    name,\n    type,\n    id: id || shortid.generate(),\n  };\n  dispatch(createProperty(property));\n\n  dispatch(addProperty({ databaseId, propertyId: property.id }));\n};\n\nexport const deletePropertyInDatabase = (databaseId, propertyId) => (dispatch) => {\n  dispatch(removeProperty(propertyId));\n  dispatch(popProperty({ databaseId, propertyId }));\n};\n\nexport const initGroupBy = (databaseId, viewId) => (dispatch) => {\n  const property = {\n    name: \"Status\",\n    type: \"Select\",\n    id: shortid.generate(),\n  };\n  dispatch(createPropertyInDatabase(databaseId, property));\n\n  dispatch(updateGroupBy({ viewId, propertyId: property.id }));\n};\n","import { combineReducers } from \"redux\";\nimport databases from \"../slices/databases\";\nimport views from \"../slices/views\";\nimport pages from \"../slices/pages\";\nimport properties from \"../slices/properties\";\n\nexport default combineReducers({\n  databases,\n  views,\n  pages,\n  properties,\n});\n","export default JSON.parse(\n  '{\"databases\":{\"1-g4iuCCq3\":{\"id\":\"1-g4iuCCq3\",\"name\":\"LeetCode\",\"pages\":[\"JHq3sz9fY\",\"oT5YokPfI\",\"NE--6cgPn\",\"sNIOfoLQyZ\",\"odNpsOYBb\",\"zo6RJJ6Fpc\",\"JxHUbsnCa\",\"muSkQqHCd\"],\"views\":[\"grr6ItSlk\",\"bGb-p3iVi\"],\"properties\":[\"AImUldOoO\",\"PRUrjxacd\"]},\"vmIcVa3xjx\":{\"id\":\"vmIcVa3xjx\",\"name\":\"Project\",\"pages\":[\"DiieJ3UBt\",\"sN3TlcZ1p\",\"FCcheO_i0\",\"F4j2YDGxiR\",\"O1nHYDmCY\",\"e8YI4rOrP\"],\"views\":[\"trIf0qZZ4\"],\"properties\":[\"5RmBhUzk9\",\"X6axz6AQS\"]}},\"views\":{\"grr6ItSlk\":{\"id\":\"grr6ItSlk\",\"name\":\"default\",\"type\":\"ListView\",\"filters\":[],\"showProperties\":[\"AImUldOoO\",\"PRUrjxacd\"],\"sorts\":[],\"sequence\":[\"muSkQqHCd\",\"JHq3sz9fY\",\"oT5YokPfI\",\"NE--6cgPn\",\"sNIOfoLQyZ\",\"odNpsOYBb\",\"zo6RJJ6Fpc\",\"JxHUbsnCa\"],\"groupBy\":{}},\"bGb-p3iVi\":{\"id\":\"bGb-p3iVi\",\"name\":\"difficulty\",\"type\":\"BoardView\",\"filters\":[],\"showProperties\":[\"AImUldOoO\"],\"sorts\":[],\"sequence\":[],\"groupBy\":{\"propertyId\":\"PRUrjxacd\"}},\"trIf0qZZ4\":{\"id\":\"trIf0qZZ4\",\"name\":\"default\",\"type\":\"BoardView\",\"filters\":[],\"showProperties\":[\"X6axz6AQS\"],\"sorts\":[],\"sequence\":[\"DiieJ3UBt\",\"sN3TlcZ1p\",\"O1nHYDmCY\",\"F4j2YDGxiR\",\"FCcheO_i0\"],\"groupBy\":{\"propertyId\":\"5RmBhUzk9\"}}},\"pages\":{\"JHq3sz9fY\":{\"id\":\"JHq3sz9fY\",\"title\":\"416. Partition Equal Subset Sum\",\"meta\":{\"AImUldOoO\":[\"jimBgkr6D\"],\"PRUrjxacd\":\"dNT4q4vBC\"},\"content\":\"\"},\"oT5YokPfI\":{\"id\":\"oT5YokPfI\",\"title\":\"322. Coin Change\",\"meta\":{\"AImUldOoO\":[\"jimBgkr6D\"],\"PRUrjxacd\":\"dNT4q4vBC\"},\"content\":\"\"},\"NE--6cgPn\":{\"id\":\"NE--6cgPn\",\"title\":\"124. Binary Tree Maximum Path Sum\",\"meta\":{\"AImUldOoO\":[\"f2aK45eFL\",\"z7oTFkFaI\"],\"PRUrjxacd\":\"Ay4yhB8p_\"},\"content\":\"\"},\"sNIOfoLQyZ\":{\"id\":\"sNIOfoLQyZ\",\"title\":\"494. Target Sum\",\"meta\":{\"AImUldOoO\":[\"jimBgkr6D\",\"z7oTFkFaI\"],\"PRUrjxacd\":\"dNT4q4vBC\"},\"content\":\"\"},\"odNpsOYBb\":{\"id\":\"odNpsOYBb\",\"title\":\"1. Two Sum\",\"meta\":{\"PRUrjxacd\":\"eb8YjSvw4\"},\"content\":\"\"},\"zo6RJJ6Fpc\":{\"id\":\"zo6RJJ6Fpc\",\"title\":\"3. Longest Substring Without Repeating Characters\",\"meta\":{\"AImUldOoO\":[\"ltDzlu3J5\"],\"PRUrjxacd\":\"dNT4q4vBC\"},\"content\":\"\"},\"JxHUbsnCa\":{\"id\":\"JxHUbsnCa\",\"title\":\"33. Search in Rotated Sorted Array\",\"meta\":{\"AImUldOoO\":[\"dAq5ch8fj\"],\"PRUrjxacd\":\"dNT4q4vBC\"},\"content\":\"\"},\"DiieJ3UBt\":{\"id\":\"DiieJ3UBt\",\"title\":\"Story 1\",\"meta\":{\"5RmBhUzk9\":\"6WkrSQXiD\",\"X6axz6AQS\":[\"D9k7k5Isf\",\"Op0OIV35d\"]},\"content\":\"\"},\"sN3TlcZ1p\":{\"id\":\"sN3TlcZ1p\",\"title\":\"Task 3\",\"meta\":{\"5RmBhUzk9\":\"6WkrSQXiD\",\"X6axz6AQS\":[\"x3ABqy8xh\"]},\"content\":\"\"},\"FCcheO_i0\":{\"id\":\"FCcheO_i0\",\"title\":\"Task 5\",\"meta\":{\"5RmBhUzk9\":\"0yWNy9Oyo\",\"X6axz6AQS\":[\"o4mCknmdp\"]},\"content\":\"\"},\"F4j2YDGxiR\":{\"id\":\"F4j2YDGxiR\",\"title\":\"Task 1\",\"meta\":{\"5RmBhUzk9\":\"VDIX3VY46\",\"X6axz6AQS\":[\"D9k7k5Isf\"]},\"content\":\"\"},\"O1nHYDmCY\":{\"id\":\"O1nHYDmCY\",\"title\":\"Task 2\",\"meta\":{\"5RmBhUzk9\":\"VDIX3VY46\",\"X6axz6AQS\":[\"D9k7k5Isf\"]},\"content\":\"\"},\"e8YI4rOrP\":{\"id\":\"e8YI4rOrP\",\"title\":\"Task 6\",\"meta\":{\"5RmBhUzk9\":\"VDIX3VY46\",\"X6axz6AQS\":[\"s5jDjfvv0\"]},\"content\":\"\"},\"muSkQqHCd\":{\"id\":\"muSkQqHCd\",\"title\":\"⭐ Star me on GitHub ✨\",\"meta\":{\"PRUrjxacd\":\"eb8YjSvw4\"},\"content\":\"[https://github.com/yoychen/notence](https://github.com/yoychen/notence)\"}},\"properties\":{\"AImUldOoO\":{\"id\":\"AImUldOoO\",\"name\":\"Algorithm\",\"type\":\"MultiSelect\",\"additional\":{\"options\":[{\"id\":\"jimBgkr6D\",\"name\":\"Dynamic Programming\",\"color\":\"green\"},{\"id\":\"z7oTFkFaI\",\"name\":\"Depth-first Search\",\"color\":\"volcano\"},{\"id\":\"f2aK45eFL\",\"name\":\"Tree\",\"color\":\"blue\"},{\"id\":\"ltDzlu3J5\",\"name\":\"Two Pointers\",\"color\":\"red\"},{\"id\":\"dAq5ch8fj\",\"name\":\"Binary Search\",\"color\":\"magenta\"}]}},\"PRUrjxacd\":{\"id\":\"PRUrjxacd\",\"name\":\"Difficulty\",\"type\":\"Select\",\"additional\":{\"options\":[{\"id\":\"eb8YjSvw4\",\"name\":\"Easy\",\"color\":\"green\"},{\"id\":\"dNT4q4vBC\",\"name\":\"Medium\",\"color\":\"volcano\"},{\"id\":\"Ay4yhB8p_\",\"name\":\"Hard\",\"color\":\"red\"}]}},\"5RmBhUzk9\":{\"id\":\"5RmBhUzk9\",\"name\":\"Status\",\"type\":\"Select\",\"additional\":{\"options\":[{\"id\":\"6WkrSQXiD\",\"name\":\"To Do\",\"color\":\"blue\"},{\"id\":\"VDIX3VY46\",\"name\":\"In Progress\",\"color\":\"gold\"},{\"id\":\"0yWNy9Oyo\",\"name\":\"Done\",\"color\":\"geekblue\"}]}},\"X6axz6AQS\":{\"id\":\"X6axz6AQS\",\"name\":\"Labels\",\"type\":\"MultiSelect\",\"additional\":{\"options\":[{\"id\":\"o4mCknmdp\",\"name\":\"Bug\",\"color\":\"red\"},{\"id\":\"x3ABqy8xh\",\"name\":\"Documentation\",\"color\":\"blue\"},{\"id\":\"D9k7k5Isf\",\"name\":\"Feature\",\"color\":\"green\"},{\"id\":\"s5jDjfvv0\",\"name\":\"Enhancement\",\"color\":\"orange\"},{\"id\":\"Op0OIV35d\",\"name\":\"Epic\",\"color\":\"gold\"}]}}}}'\n);\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"./reducers\";\nimport demoState from \"./utils/demoState\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  preloadedState: demoState,\n});\nexport const persistor = persistStore(store);\n\nif (module.hot) {\n  module.hot.accept(\"./reducers\", () => {\n    // eslint-disable-next-line global-require\n    const nextRootReducer = require(\"./reducers\").default;\n    store.replaceReducer(persistReducer(persistConfig, nextRootReducer));\n  });\n}\n","// https://ant.design/components/layout/#breakpoint-width\nconst breakpoints = {\n  xs: \"480px\",\n  sm: \"576px\",\n  md: \"768px\",\n  lg: \"992px\",\n  xl: \"1200px\",\n  xxl: \"1600px\",\n};\n\nexport default {\n  xs: `(min-width: ${breakpoints.xs})`,\n  sm: `(min-width: ${breakpoints.sm})`,\n  md: `(min-width: ${breakpoints.md})`,\n  lg: `(min-width: ${breakpoints.lg})`,\n  xl: `(min-width: ${breakpoints.xl})`,\n  xxl: `(min-width: ${breakpoints.xxl})`,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Layout } from \"antd\";\nimport { AppstoreAddOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { createDatabase, remove } from \"../slices/databases\";\nimport devices from \"../utils/devices\";\n\nconst { Sider } = Layout;\n\nconst SideBarWrapper = styled.div`\n  width: 200px;\n  height: 100%;\n  padding: 25px 20px;\n  background-color: rgb(247, 246, 243);\n\n  .title {\n    display: flex;\n    align-items: center;\n    font-size: 1.25em;\n    .add-btn {\n      margin-left: auto;\n      font-size: 13px;\n      color: gray;\n      cursor: pointer;\n      user-select: none;\n\n      &:hover {\n        color: black;\n      }\n    }\n  }\n`;\n\nconst DatabaseList = styled.div`\n  .item {\n    display: flex;\n    align-items: center;\n    padding: 4px 2px;\n    border-radius: 1px;\n    word-break: break-all;\n    cursor: pointer;\n    user-select: none;\n\n    .delete-btn {\n      margin-left: auto;\n      cursor: pointer;\n      visibility: hidden;\n    }\n\n    &:hover,\n    &:focus,\n    &.active {\n      background-color: rgb(233, 232, 229);\n      outline: none;\n\n      .delete-btn {\n        visibility: visible;\n      }\n    }\n  }\n`;\n\nexport function Sidebar({\n  databases,\n  currentDatabaseId,\n  onChange,\n  onDatabaseCreate,\n  onDatabaseDelete,\n}) {\n  const isActive = (databaseId) => currentDatabaseId === databaseId;\n\n  const handleDeleteBtnClick = (event, databaseId) => {\n    event.stopPropagation();\n\n    if (isActive(databaseId)) {\n      onChange(null);\n    }\n    setTimeout(() => {\n      onDatabaseDelete(databaseId);\n    });\n  };\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  const collapseSider = () => {\n    const isLg = window.matchMedia(devices.lg).matches;\n    if (isLg) {\n      return;\n    }\n\n    setCollapsed(true);\n  };\n\n  return (\n    <Sider breakpoint=\"lg\" collapsedWidth=\"0\" collapsed={collapsed} onCollapse={setCollapsed}>\n      <SideBarWrapper>\n        <h2 className=\"title\">\n          Databases\n          <AppstoreAddOutlined\n            data-testid=\"add-btn\"\n            className=\"add-btn\"\n            onClick={() => onDatabaseCreate(\"Untitled\")}\n          />\n        </h2>\n\n        <DatabaseList>\n          {Object.keys(databases).map((databaseId) => {\n            const handleItemSelect = () => {\n              onChange(databaseId);\n              collapseSider();\n            };\n\n            return (\n              <div\n                data-testid={`${databaseId}-database-item`}\n                role=\"button\"\n                onClick={handleItemSelect}\n                onKeyPress={handleItemSelect}\n                tabIndex={0}\n                key={databaseId}\n                className={`item ${isActive(databaseId) ? \"active\" : \"\"}`}\n              >\n                {databases[databaseId].name}\n                <DeleteOutlined\n                  data-testid={`${databaseId}-delete-btn`}\n                  onClick={(event) => handleDeleteBtnClick(event, databaseId)}\n                  className=\"delete-btn\"\n                />\n              </div>\n            );\n          })}\n        </DatabaseList>\n      </SideBarWrapper>\n    </Sider>\n  );\n}\n\nSidebar.defaultProps = {\n  currentDatabaseId: null,\n};\n\nSidebar.propTypes = {\n  databases: PropTypes.objectOf(PropTypes.object).isRequired,\n  onDatabaseCreate: PropTypes.func.isRequired,\n  onDatabaseDelete: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  currentDatabaseId: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  databases: state.databases,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDatabaseCreate: (name) => dispatch(createDatabase({ name })),\n    onDatabaseDelete: (databaseId) => dispatch(remove({ databaseId })),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function InlineInput({ tagName, className, value, onChange, multiLine }) {\n  const input = useRef(null);\n\n  const handleChange = () => {\n    onChange(input.current.innerText);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\" && multiLine === false) {\n      event.preventDefault();\n    }\n  };\n\n  useEffect(() => {\n    if (value !== input.current.innerText) {\n      input.current.innerText = value;\n    }\n  }, [value]);\n\n  return React.createElement(tagName, {\n    ref: input,\n    contentEditable: true,\n    onKeyPress: handleKeyPress,\n    onInput: handleChange,\n    className,\n    \"data-testid\": \"input\",\n  });\n}\n\nInlineInput.defaultProps = {\n  tagName: \"div\",\n  multiLine: false,\n  className: \"\",\n};\n\nInlineInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  tagName: PropTypes.string,\n  multiLine: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nconst CardWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 8px 16px;\n  border-bottom: 1px solid #eee;\n  word-break: break-all;\n  user-select: none;\n\n  .title {\n    margin: 0;\n    margin-right: auto;\n    padding-right: 1em;\n    font-size: 14px;\n  }\n\n  .property-list {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n\n    .property {\n      margin: 0 6px;\n    }\n  }\n\n  .delete-btn {\n    position: absolute;\n    top: 10px;\n    right: 8px;\n\n    cursor: pointer;\n    user-select: none;\n  }\n`;\n\nconst Card = ({ title, properties, onDelete, innerRef, ...rest }) => {\n  const handleClick = (event) => {\n    event.stopPropagation();\n\n    onDelete();\n  };\n\n  const propertyList = (\n    <div className=\"property-list\">\n      {properties.map(({ Display, property, value }) => (\n        <div className=\"property\" key={property.id}>\n          <Display property={property} value={value} />\n        </div>\n      ))}\n    </div>\n  );\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <CardWrapper ref={innerRef} {...rest}>\n      <h2 className=\"title\">{title}</h2>\n\n      {propertyList}\n\n      <DeleteOutlined className=\"delete-btn\" onClick={handleClick} />\n    </CardWrapper>\n  );\n};\n\nCard.defaultProps = {\n  innerRef: null,\n};\n\nCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  properties: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDelete: PropTypes.func.isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.any })]),\n};\n\nexport default Card;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nexport default function SortableList({ items, onSort, children }) {\n  const handleDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n\n    const [startIndex, endIndex] = [result.source.index, result.destination.index];\n    onSort({ startIndex, endIndex });\n  };\n\n  const renderListItem = (item) => (draggableProvided) => {\n    const restProps = {\n      innerRef: draggableProvided.innerRef,\n      ...draggableProvided.draggableProps,\n      ...draggableProvided.dragHandleProps,\n    };\n\n    return children(item, restProps);\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId=\"sortableList\">\n        {(provided) => (\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            {items.map((item, index) => (\n              <Draggable key={item.id} draggableId={item.id} index={index}>\n                {renderListItem(item)}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n\nSortableList.propTypes = {\n  children: PropTypes.func.isRequired,\n  onSort: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import { getFilterMethods } from \"../../../MetaInputs\";\nimport { getMetaValue } from \"../../../../slices/pages\";\n\nconst applyFilterRules = (page, filters, properties) => {\n  return filters.reduce((included, { propertyId, method, args }) => {\n    if (!propertyId || !method) {\n      return included;\n    }\n\n    const filterProperty = properties.find((property) => property.id === propertyId);\n    const filterMethod = getFilterMethods(filterProperty.type)[method];\n    const propertyValue = getMetaValue(page.meta, filterProperty);\n\n    return included && filterMethod(propertyValue, args);\n  }, true);\n};\n\nexport default (pages, filters, properties) => {\n  return pages.filter((page) => applyFilterRules(page, filters, properties));\n};\n","const findPage = (pages, pageId) => pages.find((page) => page.id === pageId);\n\nexport default (pages, sequence) => {\n  const sequentialPages = sequence\n    .map((pageId) => findPage(pages, pageId))\n    .filter((page) => page !== undefined);\n  const excludedPages = pages.filter((page) => sequence.indexOf(page.id) === -1);\n\n  return [...sequentialPages, ...excludedPages];\n};\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Button, Empty } from \"antd\";\nimport { getDisplay } from \"../../MetaInputs\";\nimport Card from \"./utils/Card\";\nimport SortableList from \"./utils/SortableList\";\nimport filterPages from \"./utils/filterPages\";\nimport applySequence from \"./utils/applySequence\";\n\nconst CreateBtn = styled(Button)`\n  margin-top: 1.25em;\n`;\n\nexport default function ListView({\n  dataSource,\n  onPageCreate,\n  onPageDelete,\n  onPageSelect,\n  onSequenceChange,\n  filters,\n  showProperties,\n  sequence,\n  properties,\n}) {\n  const createEmptyPage = () => {\n    onPageCreate({ title: \"Untitled\" });\n  };\n\n  const getProperties = (pageMeta) =>\n    properties\n      .filter((property) => showProperties.indexOf(property.id) > -1)\n      .filter((property) => pageMeta[property.id])\n      .map((property) => ({\n        Display: getDisplay(property.type),\n        property,\n        value: pageMeta[property.id],\n      }));\n\n  const pages = useMemo(\n    () => applySequence(filterPages(dataSource, filters, properties), sequence),\n    [dataSource, filters, properties, sequence]\n  );\n\n  const updateSequence = ({ startIndex, endIndex }) => {\n    const newSequence = pages.map((page) => page.id);\n\n    const droppedPageId = newSequence[startIndex];\n    newSequence.splice(startIndex, 1);\n    newSequence.splice(endIndex, 0, droppedPageId);\n\n    onSequenceChange(newSequence);\n  };\n\n  return (\n    <div>\n      <SortableList items={pages} onSort={updateSequence}>\n        {(page, restProps) => (\n          <Card\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...restProps}\n            onClick={() => onPageSelect(page.id)}\n            title={page.title}\n            properties={getProperties(page.meta)}\n            onDelete={() => onPageDelete(page.id)}\n          />\n        )}\n      </SortableList>\n\n      {pages.length === 0 ? (\n        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE}>\n          <Button onClick={createEmptyPage}>Create Now</Button>\n        </Empty>\n      ) : (\n        <CreateBtn onClick={createEmptyPage} type=\"dashed\">\n          Create Page\n        </CreateBtn>\n      )}\n    </div>\n  );\n}\n\nListView.propTypes = {\n  dataSource: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  showProperties: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sorts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sequence: PropTypes.arrayOf(PropTypes.string).isRequired,\n  properties: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onPageCreate: PropTypes.func.isRequired,\n  onPageDelete: PropTypes.func.isRequired,\n  onPageSelect: PropTypes.func.isRequired,\n  onSequenceChange: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst BoardWrapper = styled.div`\n  display: flex;\n  overflow: auto;\n`;\n\nconst Board = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  width: 220px;\n\n  & + & {\n    margin-left: 1em;\n  }\n`;\n\nconst BoardTitle = styled.div`\n  margin: 0 0.25em 1em;\n  user-select: none;\n`;\n\nconst BoardContent = styled.div`\n  flex: 1;\n  padding-bottom: 1.5em;\n`;\n\nconst AddBtn = styled(Button)`\n  width: 100%;\n  padding: 0.25em;\n  border: none;\n  text-align: left;\n`;\n\nexport default function SortableBoard({ groups, onChange, onItemCreate, children }) {\n  const handleDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n\n    onChange(result);\n  };\n\n  const renderItem = (item) => (draggableProvided) => {\n    const restProps = {\n      innerRef: draggableProvided.innerRef,\n      ...draggableProvided.draggableProps,\n      ...draggableProvided.dragHandleProps,\n    };\n\n    return children(item, restProps);\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <BoardWrapper>\n        {Object.entries(groups).map(([groupId, group]) => (\n          <Board key={groupId}>\n            <BoardTitle>{group.name}</BoardTitle>\n\n            <Droppable droppableId={groupId}>\n              {(provided) => (\n                // eslint-disable-next-line react/jsx-props-no-spreading\n                <BoardContent {...provided.droppableProps} ref={provided.innerRef}>\n                  {group.items.map((item, index) => (\n                    <Draggable key={item.id} draggableId={item.id} index={index}>\n                      {renderItem(item)}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n\n                  <AddBtn onClick={() => onItemCreate(groupId)} icon={<PlusOutlined />}>\n                    New\n                  </AddBtn>\n                </BoardContent>\n              )}\n            </Droppable>\n          </Board>\n        ))}\n      </BoardWrapper>\n    </DragDropContext>\n  );\n}\n\nSortableBoard.propTypes = {\n  children: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onItemCreate: PropTypes.func.isRequired,\n  groups: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Button, Alert } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { getDisplay } from \"../../MetaInputs\";\nimport Card from \"./utils/Card\";\nimport SortableBoard from \"./utils/SortableBoard\";\nimport filterPages from \"./utils/filterPages\";\nimport applySequence from \"./utils/applySequence\";\nimport groupPages from \"./utils/groupPages\";\n\nconst CreatePropertyBtn = styled(Button)`\n  margin-top: 0.5em;\n`;\n\nconst BoardCard = styled(Card)`\n  margin-bottom: 8px;\n  padding: 7px 12px;\n  border: 1px solid #dfdfdf;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n\n  .property-list {\n    display: block;\n    width: 100%;\n    margin-top: 3px;\n\n    .property {\n      margin: 0;\n    }\n  }\n`;\n\nexport default function BoardView({\n  dataSource,\n  onPageCreate,\n  onPageDelete,\n  onPageSelect,\n  onPageMetaChange,\n  onSequenceChange,\n  onGroupByInit,\n  filters,\n  showProperties,\n  sequence,\n  properties,\n  groupBy: { propertyId },\n}) {\n  const createPage = (groupId) => {\n    onPageCreate({\n      title: \"Untitled\",\n      meta: {\n        [propertyId]: groupId,\n      },\n    });\n  };\n\n  const getProperties = (pageMeta) =>\n    properties\n      .filter((property) => showProperties.indexOf(property.id) > -1)\n      .filter((property) => pageMeta[property.id])\n      .map((property) => ({\n        Display: getDisplay(property.type),\n        property,\n        value: pageMeta[property.id],\n      }));\n\n  const pages = useMemo(\n    () => applySequence(filterPages(dataSource, filters, properties), sequence),\n    [dataSource, filters, properties, sequence]\n  );\n\n  const propertyToGroupBy = properties.find((property) => property.id === propertyId);\n\n  const pageGroups = useMemo(() => groupPages(propertyToGroupBy, pages), [\n    propertyToGroupBy,\n    pages,\n  ]);\n\n  if (!propertyToGroupBy) {\n    return (\n      <div>\n        <Alert message=\"Please select or create a property to group by\" type=\"info\" showIcon />\n        <CreatePropertyBtn icon={<PlusOutlined />} type=\"link\" onClick={onGroupByInit}>\n          Create property\n        </CreatePropertyBtn>\n      </div>\n    );\n  }\n\n  const handleBoardChange = ({ source, destination }) => {\n    const [sourceGroupId, sourceIndex] = [source.droppableId, source.index];\n    const [destinationGroupId, destinationIndex] = [destination.droppableId, destination.index];\n\n    const targetPage = pageGroups[sourceGroupId].items[sourceIndex];\n    pageGroups[sourceGroupId].items.splice(sourceIndex, 1);\n    pageGroups[destinationGroupId].items.splice(destinationIndex, 0, targetPage);\n\n    const newSequence = Object.values(pageGroups).reduce((seq, group) => {\n      seq.push(...group.items.map((page) => page.id));\n      return seq;\n    }, []);\n\n    onSequenceChange(newSequence);\n    onPageMetaChange(targetPage.id, propertyToGroupBy.id, destinationGroupId);\n  };\n\n  return (\n    <div>\n      <SortableBoard groups={pageGroups} onChange={handleBoardChange} onItemCreate={createPage}>\n        {(page, restProps) => (\n          <BoardCard\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...restProps}\n            onClick={() => onPageSelect(page.id)}\n            title={page.title}\n            properties={getProperties(page.meta)}\n            onDelete={() => onPageDelete(page.id)}\n          />\n        )}\n      </SortableBoard>\n    </div>\n  );\n}\n\nBoardView.propTypes = {\n  dataSource: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  showProperties: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sorts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sequence: PropTypes.arrayOf(PropTypes.string).isRequired,\n  properties: PropTypes.arrayOf(PropTypes.object).isRequired,\n  groupBy: PropTypes.shape({\n    propertyId: PropTypes.string,\n  }).isRequired,\n  onPageCreate: PropTypes.func.isRequired,\n  onPageDelete: PropTypes.func.isRequired,\n  onPageSelect: PropTypes.func.isRequired,\n  onPageMetaChange: PropTypes.func.isRequired,\n  onSequenceChange: PropTypes.func.isRequired,\n  onGroupByInit: PropTypes.func.isRequired,\n};\n","import ListView from \"./List\";\nimport BoardView from \"./Board\";\n\nconst views = {\n  ListView,\n  BoardView,\n};\n\nexport const getView = (type) => views[type];\nexport const getViewNames = () => Object.keys(views);\n","import { getMetaValue } from \"../../../../slices/pages\";\n\nexport default (property, pages) => {\n  if (!property) {\n    return null;\n  }\n\n  const { options } = property.additional;\n  const pageGroups = options.reduce((groups, option) => {\n    return {\n      ...groups,\n      [option.id]: {\n        name: option.name,\n        items: [],\n      },\n    };\n  }, {});\n\n  pageGroups.ungrouped = {\n    name: \"No Status\",\n    items: [],\n  };\n\n  pages.reduce((groups, page) => {\n    const groupId = getMetaValue(page.meta, property) || \"ungrouped\";\n    if (groups[groupId]) {\n      groups[groupId].items.push(page);\n    } else {\n      // Handle non-existent group id (the option has been deleted).\n      groups.ungrouped.items.push(page);\n    }\n\n    return groups;\n  }, pageGroups);\n\n  return pageGroups;\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Select as AntSelect, Button, Modal as AntModal } from \"antd\";\nimport { PlusOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport InlineInput from \"../InlineInput\";\nimport { getViewNames } from \"./Views\";\n\nconst { Option } = AntSelect;\n\nconst Select = styled(AntSelect)`\n  flex: 1;\n`;\n\nconst ViewForm = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nconst ViewItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 24px;\n\n  &:hover {\n    background: #e7e7e78c;\n  }\n`;\n\nconst NameInput = styled(InlineInput)`\n  flex: 1;\n`;\n\nconst DeleteBtn = styled(DeleteOutlined)`\n  margin-left: 3px;\n  cursor: pointer;\n`;\n\nconst Modal = styled(AntModal)`\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n\nfunction ViewManagerModal({ visible, onCancel, views, onCreate, onDelete, onRename }) {\n  const [viewType, setViewType] = useState(null);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!viewType) {\n      return;\n    }\n\n    onCreate({ name: \"Untitled\", type: viewType });\n    setViewType(null);\n  };\n\n  const showDeleteBtn = () => views.length > 1;\n\n  return (\n    <Modal\n      title=\"Manage views\"\n      onCancel={onCancel}\n      visible={visible}\n      footer={\n        <ViewForm onSubmit={handleSubmit}>\n          <Select value={viewType} onChange={setViewType}>\n            {getViewNames().map((name) => (\n              <Option key={name} value={name}>\n                {name}\n              </Option>\n            ))}\n          </Select>\n          <Button htmlType=\"submit\" size=\"small\" type=\"link\" icon={<PlusOutlined />}>\n            Add a view\n          </Button>\n        </ViewForm>\n      }\n    >\n      {views.map(({ name, id }) => (\n        <ViewItem key={id}>\n          <NameInput value={name} onChange={(value) => onRename(id, value)} />\n          {showDeleteBtn() && <DeleteBtn onClick={() => onDelete(id)} />}\n        </ViewItem>\n      ))}\n    </Modal>\n  );\n}\n\nViewManagerModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  views: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onCreate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onRename: PropTypes.func.isRequired,\n};\n\nexport default ViewManagerModal;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { SettingOutlined } from \"@ant-design/icons\";\nimport { Select as AntSelect, Divider, Button } from \"antd\";\nimport ViewManagerModal from \"./ViewManagerModal\";\n\nconst { Option } = AntSelect;\n\nconst ViewsSelect = styled(AntSelect)`\n  width: 130px;\n`;\n\nfunction ViewSelect({ views, currentViewId, onChange, onCreate, onDelete, onRename }) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const openModal = () => setModalVisible(true);\n  const closeModal = () => setModalVisible(false);\n\n  const handleViewDelete = (viewId) => {\n    if (viewId === currentViewId) {\n      const otherView = views.find((view) => view.id !== viewId);\n      onChange(otherView.id);\n    }\n\n    onDelete(viewId);\n  };\n\n  return (\n    <ViewsSelect\n      value={currentViewId}\n      disabled={modalVisible}\n      onChange={onChange}\n      dropdownRender={(menu) => (\n        <div>\n          {menu}\n          <Divider style={{ margin: \"4px 0\" }} />\n\n          <Button onClick={openModal} size=\"small\" type=\"link\" icon={<SettingOutlined />}>\n            Manage views\n          </Button>\n\n          <ViewManagerModal\n            onCreate={onCreate}\n            onDelete={handleViewDelete}\n            onRename={onRename}\n            visible={modalVisible}\n            views={views}\n            onCancel={closeModal}\n          />\n        </div>\n      )}\n    >\n      {views.map((view) => (\n        <Option value={view.id} key={view.id}>\n          {view.name}\n        </Option>\n      ))}\n    </ViewsSelect>\n  );\n}\n\nViewSelect.propTypes = {\n  views: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currentViewId: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onCreate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onRename: PropTypes.func.isRequired,\n};\n\nexport default ViewSelect;\n","import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Input, Button, Select } from \"antd\";\nimport { getInputNames } from \"../MetaInputs\";\n\nconst { Option } = Select;\n\nfunction PropertyForm({ onFinish }) {\n  const form = useRef(null);\n\n  const handleFormFinish = (value) => {\n    onFinish(value);\n    form.current.resetFields();\n  };\n\n  return (\n    <Form ref={form} labelCol={{ span: 5 }} wrapperCol={{ span: 19 }} onFinish={handleFormFinish}>\n      <Form.Item\n        label=\"Name\"\n        name=\"name\"\n        rules={[{ required: true, message: \"Please input the name of property!\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Type\"\n        name=\"type\"\n        rules={[{ required: true, message: \"Please input the type of property!\" }]}\n      >\n        <Select style={{ width: \"100%\" }}>\n          {getInputNames().map((inputName) => (\n            <Option key={inputName} value={inputName}>\n              {inputName}\n            </Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        wrapperCol={{\n          xs: { offset: 0 },\n          sm: { offset: 5 },\n        }}\n      >\n        <Button type=\"primary\" htmlType=\"submit\">\n          Create\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nPropertyForm.propTypes = {\n  onFinish: PropTypes.func.isRequired,\n};\n\nexport default PropertyForm;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Modal, Switch, Button, Menu, Dropdown } from \"antd\";\nimport { PlusOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport PropertyForm from \"./PropertyForm\";\n\nconst PropertyItem = styled(Menu.Item)`\n  display: flex;\n  align-items: center;\n\n  .name {\n    margin-right: auto;\n    padding-right: 1em;\n  }\n`;\n\nconst DeleteBtn = styled(DeleteOutlined)`\n  margin-left: 1em;\n  cursor: pointer;\n  user-select: none;\n`;\n\nfunction PropertiesDropdown({\n  showProperties,\n  properties,\n  onPropertyCreate,\n  onPropertyDelete,\n  onPropertyToggle,\n}) {\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const inShowProperties = (propertyId) => showProperties.indexOf(propertyId) > -1;\n\n  const openModal = () => setModalVisible(true);\n  const closeModal = () => setModalVisible(false);\n\n  const handlePropertyFormFinish = (property) => {\n    onPropertyCreate(property);\n    closeModal();\n  };\n\n  const createPropertyModal = (\n    <Modal title=\"Create property\" visible={modalVisible} onCancel={closeModal} footer={null}>\n      <PropertyForm onFinish={handlePropertyFormFinish} />\n    </Modal>\n  );\n\n  const propertyList = properties.map((property) => (\n    <PropertyItem key={property.id}>\n      <span className=\"name\">{property.name}</span>\n      <Switch\n        size=\"small\"\n        onChange={() => onPropertyToggle(property.id)}\n        checked={inShowProperties(property.id)}\n      />\n      <DeleteBtn onClick={() => onPropertyDelete(property.id)} />\n    </PropertyItem>\n  ));\n\n  const menu = (\n    <Menu>\n      {propertyList}\n\n      <Menu.Divider />\n      <Menu.Item>\n        <Button onClick={openModal} size=\"small\" type=\"default\" icon={<PlusOutlined />}>\n          Add a property\n        </Button>\n\n        {createPropertyModal}\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown\n      visible={dropdownVisible}\n      onVisibleChange={setDropdownVisible}\n      overlay={menu}\n      trigger={[\"click\"]}\n    >\n      <Button size=\"small\" type=\"link\">\n        Properties\n      </Button>\n    </Dropdown>\n  );\n}\n\nPropertiesDropdown.propTypes = {\n  showProperties: PropTypes.arrayOf(PropTypes.string).isRequired,\n  properties: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onPropertyCreate: PropTypes.func.isRequired,\n  onPropertyDelete: PropTypes.func.isRequired,\n  onPropertyToggle: PropTypes.func.isRequired,\n};\n\nexport default PropertiesDropdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Select as AntSelect } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { getFilterMethods } from \"../MetaInputs\";\n\nconst { Option } = AntSelect;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 6px 12px;\n\n  &:hover {\n    background-color: #f5f5f5;\n  }\n`;\n\nconst Select = styled(AntSelect)`\n  min-width: 100px;\n\n  & + & {\n    margin-left: 3px;\n  }\n`;\n\nconst ArgsInputWrapper = styled.div`\n  margin-left: 3px;\n`;\n\nconst DeleteBtn = styled(DeleteOutlined)`\n  margin-left: 6px;\n  cursor: pointer;\n`;\n\nfunction FilterInput({\n  properties,\n  filter,\n  filter: { propertyId, method, args },\n  onChange,\n  onDelete,\n}) {\n  const selectedProperty = properties.find((property) => property.id === propertyId);\n  const filterMethods = selectedProperty ? getFilterMethods(selectedProperty.type) : {};\n  const ArgsInput = method && filterMethods[method].ArgsInput;\n\n  const handlePropertyChange = (selectedPropertyId) => {\n    onChange({\n      ...filter,\n      propertyId: selectedPropertyId,\n      method: null,\n      args: [],\n    });\n  };\n\n  const handleMethodChange = (selectedMethod) => {\n    onChange({\n      ...filter,\n      method: selectedMethod,\n      args: [],\n    });\n  };\n\n  const handleArgsChange = (newArgs) => {\n    onChange({\n      ...filter,\n      args: newArgs,\n    });\n  };\n\n  return (\n    <InputWrapper>\n      <Select size=\"small\" value={propertyId} onChange={handlePropertyChange}>\n        {properties.map(({ name, id }) => (\n          <Option key={id} value={id}>\n            {name}\n          </Option>\n        ))}\n      </Select>\n\n      <Select size=\"small\" value={method} onChange={handleMethodChange}>\n        {Object.keys(filterMethods).map((name) => (\n          <Option key={name} value={name}>\n            {name}\n          </Option>\n        ))}\n      </Select>\n\n      {ArgsInput && (\n        <ArgsInputWrapper>\n          <ArgsInput args={args} onChange={handleArgsChange} property={selectedProperty} />\n        </ArgsInputWrapper>\n      )}\n\n      <DeleteBtn onClick={onDelete} />\n    </InputWrapper>\n  );\n}\n\nFilterInput.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filter: PropTypes.shape({\n    propertyId: PropTypes.string,\n    method: PropTypes.string,\n    args: PropTypes.array,\n  }).isRequired,\n  onChange: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default FilterInput;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Menu, Dropdown } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport FilterInput from \"./FilterInput\";\n\nfunction FiltersDropdown({ properties, filters, onFilterCreate, onFilterChange, onFilterDelete }) {\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n\n  const filterList = filters.map((filter) => (\n    <FilterInput\n      key={filter.id}\n      filter={filter}\n      onChange={(newFilter) => onFilterChange(filter.id, newFilter)}\n      onDelete={() => onFilterDelete(filter.id)}\n      properties={properties}\n    />\n  ));\n\n  const menu = (\n    <Menu>\n      {filterList}\n\n      <Menu.Divider />\n      <Menu.Item>\n        <Button onClick={onFilterCreate} size=\"small\" type=\"default\" icon={<PlusOutlined />}>\n          Add a filter\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown\n      visible={dropdownVisible}\n      onVisibleChange={setDropdownVisible}\n      overlay={menu}\n      trigger={[\"click\"]}\n    >\n      <Button size=\"small\" type=\"link\">\n        Filter\n      </Button>\n    </Dropdown>\n  );\n}\n\nFiltersDropdown.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onFilterCreate: PropTypes.func.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n  onFilterDelete: PropTypes.func.isRequired,\n};\n\nexport default FiltersDropdown;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Button, Menu, Dropdown } from \"antd\";\nimport { CheckOutlined } from \"@ant-design/icons\";\n\nconst PropertyItem = styled(Menu.Item)`\n  display: flex;\n  align-items: center;\n  min-width: 130px;\n\n  .name {\n    margin-right: auto;\n    padding-right: 1em;\n  }\n`;\n\nfunction GroupByDropdown({ properties, groupBy: { propertyId }, onGroupByChange }) {\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n\n  const selectTypeProprties = properties.filter((property) => property.type === \"Select\");\n  const propertyList = selectTypeProprties.map((property) => (\n    <PropertyItem key={property.id} onClick={() => onGroupByChange(property.id)}>\n      <span className=\"name\">{property.name}</span>\n      {property.id === propertyId && <CheckOutlined />}\n    </PropertyItem>\n  ));\n\n  const menu = <Menu>{propertyList}</Menu>;\n\n  return (\n    <Dropdown\n      visible={dropdownVisible}\n      onVisibleChange={setDropdownVisible}\n      overlay={menu}\n      trigger={[\"click\"]}\n    >\n      <Button size=\"small\" type=\"link\">\n        Group by\n      </Button>\n    </Dropdown>\n  );\n}\n\nGroupByDropdown.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.object).isRequired,\n  groupBy: PropTypes.shape({\n    propertyId: PropTypes.string,\n  }).isRequired,\n  onGroupByChange: PropTypes.func.isRequired,\n};\n\nexport default GroupByDropdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { getInput } from \"../MetaInputs\";\nimport devices from \"../../utils/devices\";\n\nconst Meta = styled.div`\n  display: flex;\n  align-items: flex-end;\n  margin-bottom: 3px;\n\n  .meta-name {\n    width: 80px;\n    margin-right: 10px;\n    font-size: 1.15em;\n\n    @media screen and ${devices.lg} {\n      width: 150px;\n    }\n  }\n\n  .meta-input {\n    flex: 1;\n  }\n`;\n\nexport default function PageMeta({ meta, onMetaChange, onAdditionalChange }) {\n  const list = meta.map(({ property: { id, name, additional, type }, value }) => {\n    const handleChange = (newValue) => onMetaChange(id, newValue);\n    const handleAdditionChange = (additionalChange) => onAdditionalChange(id, additionalChange);\n\n    const MetaInput = getInput(type);\n\n    return (\n      <Meta key={id}>\n        <div className=\"meta-name\">{name}</div>\n        <div className=\"meta-input\">\n          <MetaInput\n            onChange={handleChange}\n            value={value}\n            additional={additional}\n            onAdditionalChange={handleAdditionChange}\n          />\n        </div>\n      </Meta>\n    );\n  });\n\n  return <div>{list}</div>;\n}\n\nPageMeta.propTypes = {\n  meta: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onMetaChange: PropTypes.func.isRequired,\n  onAdditionalChange: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport InlineInput from \"../InlineInput\";\nimport PageMeta from \"./PageMeta\";\n\nfunction PageHeader({ title, meta, onTitleChange, onMetaChange, onAdditionalChange }) {\n  return (\n    <header className=\"page-header\">\n      <InlineInput onChange={onTitleChange} tagName=\"h1\" value={title} />\n\n      <PageMeta onMetaChange={onMetaChange} meta={meta} onAdditionalChange={onAdditionalChange} />\n    </header>\n  );\n}\n\nPageHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  meta: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onTitleChange: PropTypes.func.isRequired,\n  onMetaChange: PropTypes.func.isRequired,\n  onAdditionalChange: PropTypes.func.isRequired,\n};\n\nexport default PageHeader;\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\nimport { Editor } from \"@toast-ui/react-editor\";\n\nexport default function MarkdownEditor({ value, onChange, height, previewStyle }) {\n  const editor = useRef(null);\n\n  const handleChange = () => {\n    onChange(editor.current.getInstance().getMarkdown());\n  };\n\n  return (\n    <Editor\n      initialValue={value}\n      previewStyle={previewStyle}\n      height={height}\n      initialEditType=\"markdown\"\n      onChange={handleChange}\n      ref={editor}\n      usageStatistics={false}\n    />\n  );\n}\n\nMarkdownEditor.defaultProps = {\n  height: \"auto\",\n  previewStyle: \"vertical\",\n};\n\nMarkdownEditor.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  height: PropTypes.string,\n  previewStyle: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport PageHeader from \"./PageHeader\";\nimport MardownEditor from \"../MardownEditor\";\nimport { updateContent, updateTitle, updateMeta, getMetaValue } from \"../../slices/pages\";\nimport { updateAdditional } from \"../../slices/properties\";\nimport devices from \"../../utils/devices\";\n\nconst PageWrapper = styled.div`\n  @media screen and ${devices.lg} {\n    padding: 20px;\n  }\n`;\n\nconst PageContent = styled.div`\n  margin-top: 35px;\n`;\n\nfunction Page({\n  title,\n  meta,\n  content,\n  onContentChange,\n  onTitleChange,\n  onMetaChange,\n  onAdditionalChange,\n}) {\n  const isLg = window.matchMedia(devices.lg).matches;\n  const previewStyle = isLg ? \"vertical\" : \"tab\";\n\n  return (\n    <PageWrapper>\n      <PageHeader\n        onMetaChange={onMetaChange}\n        onTitleChange={onTitleChange}\n        onAdditionalChange={onAdditionalChange}\n        title={title}\n        meta={meta}\n      />\n\n      <PageContent>\n        <MardownEditor value={content} previewStyle={previewStyle} onChange={onContentChange} />\n      </PageContent>\n    </PageWrapper>\n  );\n}\n\nPage.propTypes = {\n  title: PropTypes.string.isRequired,\n  meta: PropTypes.arrayOf(PropTypes.object).isRequired,\n  content: PropTypes.string.isRequired,\n  onContentChange: PropTypes.func.isRequired,\n  onTitleChange: PropTypes.func.isRequired,\n  onMetaChange: PropTypes.func.isRequired,\n  onAdditionalChange: PropTypes.func.isRequired,\n};\n\nconst getMeta = (state, pageId, properties) => {\n  const { meta } = state.pages[pageId];\n\n  return properties.map((property) => ({\n    property,\n    value: getMetaValue(meta, property),\n  }));\n};\n\nconst mapStateToProps = (state, { pageId, properties }) => ({\n  title: state.pages[pageId].title,\n  meta: getMeta(state, pageId, properties),\n  content: state.pages[pageId].content,\n});\n\nconst mapDispatchToProps = (dispatch, { pageId }) => {\n  return {\n    onContentChange: (content) => dispatch(updateContent({ pageId, content })),\n    onTitleChange: (title) => dispatch(updateTitle({ pageId, title })),\n    onMetaChange: (propertyId, value) => dispatch(updateMeta({ pageId, propertyId, value })),\n    onAdditionalChange: (propertyId, additionalChange) =>\n      dispatch(updateAdditional({ propertyId, additionalChange })),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Modal, notification } from \"antd\";\nimport { InfoCircleTwoTone } from \"@ant-design/icons\";\nimport InlineInput from \"../InlineInput\";\nimport { getView } from \"./Views\";\nimport ViewSelect from \"./ViewSelect\";\nimport PropertiesDropdown from \"./PropertiesDropdown\";\nimport FiltersDropdown from \"./FiltersDropdown\";\nimport GroupByDropdown from \"./GroupByDropdown\";\nimport Page from \"../Page/Page\";\nimport {\n  createPageInDatabase,\n  deletePageInDatabase,\n  createPropertyInDatabase,\n  deletePropertyInDatabase,\n  rename,\n  createViewInDatabase,\n  deleteViewInDatabase,\n  initGroupBy,\n} from \"../../slices/databases\";\nimport {\n  toggleShowProperty,\n  createFilter,\n  updateFilter,\n  deleteFilter,\n  updateSequence,\n  rename as renameView,\n  updateGroupBy,\n} from \"../../slices/views\";\nimport { updateMeta } from \"../../slices/pages\";\nimport devices from \"../../utils/devices\";\n\nconst DatabaseWrapper = styled.div`\n  width: 100vw;\n  padding: 35px 30px;\n  padding-left: 55px;\n\n  @media screen and ${devices.lg} {\n    width: auto;\n    padding: 35px 96px;\n  }\n`;\n\nconst Content = styled.div``;\n\nconst Title = styled.h1`\n  font-size: 2.25em;\n  margin-bottom: 1em;\n`;\n\nconst Toolbar = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n\n  .right {\n    margin-left: auto;\n  }\n`;\n\nconst PageModal = styled(Modal)`\n  min-width: 100%;\n\n  @media screen and ${devices.lg} {\n    min-width: 85vw;\n  }\n`;\n\nfunction Database({\n  name,\n  pages,\n  views,\n  properties,\n  onPageCreate,\n  onPageDelete,\n  onPageMetaChange,\n  onPropertyCreate,\n  onPropertyToggle,\n  onPropertyDelete,\n  onFilterCreate,\n  onFilterChange,\n  onFilterDelete,\n  onSequenceChange,\n  onRename,\n  onViewCreate,\n  onViewDelete,\n  onViewRename,\n  onGroupByInit,\n  onGroupByChange,\n}) {\n  const [currentViewId, setCurrentViewId] = useState(views[0].id);\n  const [selectedPageId, setSelectedPageId] = useState(null);\n  const currentView = views.find((view) => view.id === currentViewId);\n  const DataView = getView(currentView.type);\n\n  const resetSelectedPageId = () => {\n    setSelectedPageId(null);\n  };\n\n  const handlePropertyToggle = (propertyId) => onPropertyToggle(currentViewId, propertyId);\n  const handleFilterChange = (filterId, newFilter) =>\n    onFilterChange(currentViewId, filterId, newFilter);\n  const handleFilterCreate = () => onFilterCreate(currentViewId);\n  const handleFilterDelete = (filterId) => onFilterDelete(currentViewId, filterId);\n  const handleSequenceChange = (newSequence) => onSequenceChange(currentViewId, newSequence);\n  const handleGroupByInit = () => onGroupByInit(currentViewId);\n  const handleGroupByChange = (propertyId) => onGroupByChange(currentViewId, propertyId);\n\n  const handlePageCreate = (page) => {\n    if (currentView.filters.length > 0) {\n      notification.open({\n        icon: <InfoCircleTwoTone />,\n        message: \"The new created page may not be able to show on current filter rules.\",\n        duration: 8,\n      });\n    }\n    onPageCreate(page);\n  };\n\n  return (\n    <DatabaseWrapper>\n      <Title>\n        <InlineInput onChange={onRename} value={name} />\n      </Title>\n      <Toolbar>\n        <ViewSelect\n          views={views}\n          currentViewId={currentViewId}\n          onChange={setCurrentViewId}\n          onCreate={onViewCreate}\n          onDelete={onViewDelete}\n          onRename={onViewRename}\n        />\n\n        <div className=\"right\">\n          <PropertiesDropdown\n            onPropertyCreate={onPropertyCreate}\n            properties={properties}\n            showProperties={currentView.showProperties}\n            onPropertyToggle={handlePropertyToggle}\n            onPropertyDelete={onPropertyDelete}\n          />\n          <FiltersDropdown\n            properties={properties}\n            filters={currentView.filters}\n            onFilterCreate={handleFilterCreate}\n            onFilterChange={handleFilterChange}\n            onFilterDelete={handleFilterDelete}\n          />\n          {currentView.type === \"BoardView\" && (\n            <GroupByDropdown\n              properties={properties}\n              groupBy={currentView.groupBy}\n              onGroupByChange={handleGroupByChange}\n            />\n          )}\n        </div>\n      </Toolbar>\n\n      <Content>\n        <DataView\n          onPageSelect={setSelectedPageId}\n          onPageCreate={handlePageCreate}\n          onPageDelete={onPageDelete}\n          onPageMetaChange={onPageMetaChange}\n          onSequenceChange={handleSequenceChange}\n          onGroupByInit={handleGroupByInit}\n          dataSource={pages}\n          filters={currentView.filters}\n          showProperties={currentView.showProperties}\n          sorts={currentView.sorts}\n          sequence={currentView.sequence}\n          groupBy={currentView.groupBy}\n          properties={properties}\n        />\n\n        <PageModal visible={!!selectedPageId} onCancel={resetSelectedPageId} footer={null}>\n          {selectedPageId && <Page pageId={selectedPageId} properties={properties} />}\n        </PageModal>\n      </Content>\n    </DatabaseWrapper>\n  );\n}\n\nDatabase.propTypes = {\n  name: PropTypes.string.isRequired,\n  pages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  views: PropTypes.arrayOf(PropTypes.object).isRequired,\n  properties: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onPageCreate: PropTypes.func.isRequired,\n  onPageDelete: PropTypes.func.isRequired,\n  onPageMetaChange: PropTypes.func.isRequired,\n  onPropertyCreate: PropTypes.func.isRequired,\n  onPropertyToggle: PropTypes.func.isRequired,\n  onPropertyDelete: PropTypes.func.isRequired,\n  onFilterCreate: PropTypes.func.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n  onFilterDelete: PropTypes.func.isRequired,\n  onSequenceChange: PropTypes.func.isRequired,\n  onRename: PropTypes.func.isRequired,\n  onViewCreate: PropTypes.func.isRequired,\n  onViewDelete: PropTypes.func.isRequired,\n  onViewRename: PropTypes.func.isRequired,\n  onGroupByInit: PropTypes.func.isRequired,\n  onGroupByChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, { databaseId }) => ({\n  id: databaseId,\n  name: state.databases[databaseId].name,\n  pages: state.databases[databaseId].pages.map((id) => state.pages[id]),\n  views: state.databases[databaseId].views.map((id) => state.views[id]),\n  properties: state.databases[databaseId].properties.map((id) => state.properties[id]),\n});\n\nconst mapDispatchToProps = (dispatch, { databaseId }) => {\n  return {\n    onPageCreate: (page) => dispatch(createPageInDatabase(databaseId, page)),\n    onPageDelete: (pageId) => dispatch(deletePageInDatabase(databaseId, pageId)),\n    onPageMetaChange: (pageId, propertyId, value) =>\n      dispatch(updateMeta({ pageId, propertyId, value })),\n    onPropertyCreate: (property) => dispatch(createPropertyInDatabase(databaseId, property)),\n    onPropertyToggle: (viewId, propertyId) => dispatch(toggleShowProperty({ viewId, propertyId })),\n    onPropertyDelete: (propertyId) => dispatch(deletePropertyInDatabase(databaseId, propertyId)),\n    onFilterCreate: (viewId) => dispatch(createFilter(viewId)),\n    onFilterChange: (viewId, filterId, newFilter) =>\n      dispatch(updateFilter({ viewId, filterId, newFilter })),\n    onFilterDelete: (viewId, filterId) => dispatch(deleteFilter({ viewId, filterId })),\n    onSequenceChange: (viewId, newSequence) => dispatch(updateSequence({ viewId, newSequence })),\n    onRename: (newName) => dispatch(rename({ databaseId, newName })),\n    onViewCreate: (view) => dispatch(createViewInDatabase(databaseId, view)),\n    onViewDelete: (viewId) => dispatch(deleteViewInDatabase(databaseId, viewId)),\n    onViewRename: (viewId, newName) => dispatch(renameView({ viewId, newName })),\n    onGroupByInit: (viewId) => dispatch(initGroupBy(databaseId, viewId)),\n    onGroupByChange: (viewId, propertyId) => dispatch(updateGroupBy({ viewId, propertyId })),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Database);\n","import React, { useState } from \"react\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { hot } from \"react-hot-loader/root\";\nimport styled from \"styled-components\";\nimport { Layout, Empty } from \"antd\";\nimport \"./App.css\";\n// eslint-disable-next-line import/no-named-as-default\nimport Sidebar from \"./components/Sidebar\";\nimport Database from \"./components/Database/Database\";\n\nconst { Content } = Layout;\n\nconst AppLayout = styled(Layout)`\n  height: 100vh;\n`;\n\nconst AppContent = styled(Content)`\n  background-color: white;\n`;\n\nconst EmptyView = styled(Empty)`\n  margin-top: 12em;\n`;\n\nfunction App() {\n  const [currentDatabaseId, setCurrentDatabaseId] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <AppLayout>\n        <Sidebar currentDatabaseId={currentDatabaseId} onChange={setCurrentDatabaseId} />\n        <AppContent>\n          {currentDatabaseId ? (\n            <Database key={currentDatabaseId} databaseId={currentDatabaseId} />\n          ) : (\n            <EmptyView description=\"No Database Selected\" />\n          )}\n        </AppContent>\n      </AppLayout>\n    </div>\n  );\n}\n\nexport default process.env.NODE_ENV === \"development\" ? hot(App) : App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n  googleAnalyticsId: process.env.REACT_APP_GOOGLE_ANALYTICS_ID,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport ReactGA from \"react-ga\";\nimport { store, persistor } from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport config from \"./utils/config\";\n\nif (config.googleAnalyticsId) {\n  ReactGA.initialize(config.googleAnalyticsId);\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}